{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n  const {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nlet defaultState = {\n  currency: \"USD\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 1,\n    label: 'Без пересадок',\n    checked: true\n  }, {\n    id: 2,\n    label: '1 пересадка',\n    checked: true\n  }, {\n    id: 3,\n    label: '2 пересадки',\n    checked: true\n  }, {\n    id: 4,\n    label: '3 пересадки',\n    checked: true\n  }]\n};\n\nfunction currencyReducer(state = defaultState, action) {\n  // console.log('REDUCER', state, action);\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 76)\n        }));\n      } else if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 86)\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return { ...filter,\n          checked: !filter.checked\n        };\n        return { ...filter\n        };\n      });\n\n      if (check.id === 1) {\n        console.log('check.id', check.id);\n        someTicket = someTicket.filter(elem => console.log(elem.stops === 0));\n      } else if (check.id === 2) {\n        someTicket = someTicket.filter(elem => elem.stops === 1);\n      } else if (check.id === 3) {\n        someTicket = someTicket.filter(elem => elem.stops === 2);\n      } else if (check.id === 4) {\n        someTicket = someTicket.filter(elem => elem.stops === 3);\n      }\n\n      return { ...state,\n        someTickets: someTicket,\n        tickets: [...defaultState.tickets],\n        filters: newFilters\n      };\n    // return {...state, filters: newFilters}\n\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let allChecked = state.filters;\n\n      if (toggleCheckAllName === 'All') {\n        allChecked = allChecked.map(filter => ({ ...filter,\n          checked: !allChecked.checked\n        }));\n      }\n\n      return { ...state,\n        filters: allChecked,\n        tickets: [...defaultState.tickets]\n      };\n    // case actionNames.MY_TICKETS:\n    //     let someTicket = [...getDefaultTickets()];\n    //     const ticketStops = someTicket.stops;\n    //     const check = state.filters;\n    //     if (check.id === 1) {\n    //         console.log('check.id', check.id)\n    //         someTicket = someTicket.filter(elem =>  console.log(elem.stops === 0))\n    //     } else if (check.id === 2) {\n    //         someTicket = someTicket.filter(elem => elem.stops === 1)\n    //     } else if (check.id === 3) {\n    //         someTicket = someTicket.filter(elem => elem.stops === 2)\n    //     } else if (check.id === 4) {\n    //         someTicket = someTicket.filter(elem => elem.stops === 3)\n    //     }\n    //     return {...state, someTickets: someTicket, tickets: [...defaultState.tickets] }\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer; // const ticketsFilter = state.tickets.filter((ticket) => {\n//                 return newFilters.some(filter => filter === ticket.stops)\n//             });","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","label","checked","currencyReducer","state","action","type","CURRENCY_CHANGE","currencyName","map","ticket","Math","trunc","FILTERS","filterName","newFilters","filter","check","console","log","someTicket","elem","stops","someTickets","CHECK_ALL","toggleCheckAllName","allChecked"],"mappings":"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","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n    const { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nlet defaultState = {\n    currency: \"USD\",\n    tickets: [...getDefaultTickets()],\n    filters: [\n        { id: 1, label: 'Без пересадок', checked: true },\n        { id: 2, label: '1 пересадка',  checked: true },\n        { id: 3, label: '2 пересадки',  checked: true },\n        { id: 4, label: '3 пересадки',  checked: true }\n    ],\n}\n\nfunction currencyReducer (state = defaultState, action) {\n    // console.log('REDUCER', state, action);\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 76)}))\n            } else if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 86)}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = state.filters.map((filter) => {\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\n                return {...filter}\n            })\n            if (check.id === 1) {\n                console.log('check.id', check.id)\n                someTicket = someTicket.filter(elem =>  console.log(elem.stops === 0))\n            } else if (check.id === 2) {\n                someTicket = someTicket.filter(elem => elem.stops === 1)\n            } else if (check.id === 3) {\n                someTicket = someTicket.filter(elem => elem.stops === 2)\n            } else if (check.id === 4) {\n                someTicket = someTicket.filter(elem => elem.stops === 3)\n            }\n            return {...state, someTickets: someTicket, tickets: [...defaultState.tickets], filters: newFilters }\n                // return {...state, filters: newFilters}\n\n        case actionNames.CHECK_ALL:\n            const { toggleCheckAllName } = action;\n            let allChecked = state.filters;\n            if (toggleCheckAllName === 'All') {\n               allChecked = allChecked.map((filter) => ({...filter, checked: !allChecked.checked}))\n            }\n            return {...state, filters: allChecked, tickets: [...defaultState.tickets]}\n\n        // case actionNames.MY_TICKETS:\n        //     let someTicket = [...getDefaultTickets()];\n        //     const ticketStops = someTicket.stops;\n        //     const check = state.filters;\n        //     if (check.id === 1) {\n        //         console.log('check.id', check.id)\n        //         someTicket = someTicket.filter(elem =>  console.log(elem.stops === 0))\n        //     } else if (check.id === 2) {\n        //         someTicket = someTicket.filter(elem => elem.stops === 1)\n        //     } else if (check.id === 3) {\n        //         someTicket = someTicket.filter(elem => elem.stops === 2)\n        //     } else if (check.id === 4) {\n        //         someTicket = someTicket.filter(elem => elem.stops === 3)\n        //     }\n        //     return {...state, someTickets: someTicket, tickets: [...defaultState.tickets] }\n            \n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;\n\n// const ticketsFilter = state.tickets.filter((ticket) => {\n//                 return newFilters.some(filter => filter === ticket.stops)\n//             });\n\n\n\n"]},"metadata":{},"sourceType":"module"}