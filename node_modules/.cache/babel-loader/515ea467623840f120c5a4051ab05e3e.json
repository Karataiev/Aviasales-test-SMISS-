{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n  const {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nlet defaultState = {\n  currency: \"USD\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 1,\n    label: 'Без пересадок',\n    checked: true\n  }, {\n    id: 2,\n    label: '1 пересадка',\n    checked: true\n  }, {\n    id: 3,\n    label: '2 пересадки',\n    checked: true\n  }, {\n    id: 4,\n    label: '3 пересадки',\n    checked: true\n  }],\n  headChecked: [{\n    idAll: 'All',\n    labelAll: 'Все',\n    checkedAll: true\n  }]\n};\n\nfunction currencyReducer(state = defaultState, action) {\n  console.log('REDUCER', state, action);\n\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 76)\n        }));\n      } else if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 86)\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return { ...filter,\n          checked: !filter.checked\n        };\n        return { ...filter\n        };\n      });\n      return { ...state,\n        filters: newFilters\n      };\n\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let allChecked = state.filters;\n      let headChecked = state.headChecked;\n\n      if (toggleCheckAllName === headChecked.id) {\n        allChecked = allChecked.map(filter => ({ ...filter,\n          checked: !filter.checked\n        }));\n      }\n\n      return { ...state,\n        filters: allChecked,\n        toggle: toggleCheckAllName\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer; // if (headChecked.checked === false) {\n//                 return headChecked.map(el => ({...el, checked: true}))\n//             } else {\n//                 return headChecked.map(el => ({...el, checked: false}))\n//             }\n//           }\n//             if (headChecked.checked === false) {\n//                 const index = allChecked.findIndex((el) => el.id === action.id)\n//                 const oldItem = allChecked[index]\n//                 const newItem = {...oldItem, checked: !oldItem.checked }\n//                 return [...allChecked.slice(0, index), newItem, ...allChecked.slice(index + 1)]\n//             } else {\n//                 const index = allChecked.findIndex((el) => el.id === action.id)\n//                 const oldItem = allChecked[index]\n//                 const allOldItem = headChecked[0]\n//                 const allNewItem = {...allOldItem, checked: false}\n//                 const newItem = {...oldItem, checked: !oldItem.checked }\n//                 return [allNewItem, ...allChecked.slice(1, index), newItem, ...allChecked.slice(index + 1)]\n//             }","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","label","checked","headChecked","idAll","labelAll","checkedAll","currencyReducer","state","action","console","log","type","CURRENCY_CHANGE","currencyName","map","ticket","Math","trunc","FILTERS","filterName","newFilters","filter","CHECK_ALL","toggleCheckAllName","allChecked","toggle"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAcF,UAApB;AACA,SAAOE,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,CAAP;AACH,CAHD;;AAKA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,KADK;AAEfN,EAAAA,OAAO,EAAE,CAAC,GAAGD,iBAAiB,EAArB,CAFM;AAGfQ,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,eAAhB;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,aAAhB;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAFK,EAGL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,aAAhB;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAHK,EAIL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,aAAhB;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAJK,CAHM;AASfC,EAAAA,WAAW,EAAE,CACT;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE,KAA1B;AAAiCC,IAAAA,UAAU,EAAE;AAA7C,GADS;AATE,CAAnB;;AAcA,SAASC,eAAT,CAA0BC,KAAK,GAAGX,YAAlC,EAAgDY,MAAhD,EAAwD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB,EAA8BC,MAA9B;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKvB,WAAW,CAACwB,eAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAmBL,MAAzB;AACA,UAAIjB,OAAO,GAAG,CAAC,GAAGD,iBAAiB,EAArB,CAAd;;AACA,UAAIuB,YAAY,KAAK,KAArB,EAA4B;AACxBtB,QAAAA,OAAO,GAAGA,OAAO,CAACuB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYpB,UAAAA,KAAK,EAAEqB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACpB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH,OAFD,MAEO,IAAIkB,YAAY,KAAK,KAArB,EAA4B;AAC/BtB,QAAAA,OAAO,GAAGA,OAAO,CAACuB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYpB,UAAAA,KAAK,EAAEqB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACpB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH;;AACD,aAAO,EAAC,GAAGY,KAAJ;AAAWV,QAAAA,QAAQ,EAAEgB,YAArB;AAAmCtB,QAAAA;AAAnC,OAAP;;AAEJ,SAAKH,WAAW,CAAC8B,OAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAiBX,MAAvB;AACA,YAAMY,UAAU,GAAGb,KAAK,CAACT,OAAN,CAAcgB,GAAd,CAAmBO,MAAD,IAAY;AAC7C,YAAIA,MAAM,CAACtB,EAAP,KAAcoB,UAAlB,EAA8B,OAAO,EAAC,GAAGE,MAAJ;AAAYpB,UAAAA,OAAO,EAAE,CAACoB,MAAM,CAACpB;AAA7B,SAAP;AAC9B,eAAO,EAAC,GAAGoB;AAAJ,SAAP;AACH,OAHkB,CAAnB;AAII,aAAO,EAAC,GAAGd,KAAJ;AAAWT,QAAAA,OAAO,EAAEsB;AAApB,OAAP;;AAER,SAAKhC,WAAW,CAACkC,SAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAyBf,MAA/B;AACA,UAAIgB,UAAU,GAAGjB,KAAK,CAACT,OAAvB;AACA,UAAII,WAAW,GAAGK,KAAK,CAACL,WAAxB;;AACA,UAAIqB,kBAAkB,KAAKrB,WAAW,CAACH,EAAvC,EAA2C;AACxCyB,QAAAA,UAAU,GAAGA,UAAU,CAACV,GAAX,CAAgBO,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYpB,UAAAA,OAAO,EAAE,CAACoB,MAAM,CAACpB;AAA7B,SAAb,CAAf,CAAb;AACF;;AACD,aAAO,EAAC,GAAGM,KAAJ;AAAWT,QAAAA,OAAO,EAAE0B,UAApB;AAAgCC,QAAAA,MAAM,EAAEF;AAAxC,OAAP;;AAKJ;AACI,aAAO,EAAC,GAAGhB;AAAJ,OAAP;AAhCR;AAkCH;;AAED,eAAeD,eAAf,C,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n    const { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nlet defaultState = {\n    currency: \"USD\",\n    tickets: [...getDefaultTickets()],\n    filters: [\n        { id: 1, label: 'Без пересадок', checked: true },\n        { id: 2, label: '1 пересадка',  checked: true },\n        { id: 3, label: '2 пересадки',  checked: true },\n        { id: 4, label: '3 пересадки',  checked: true }\n    ],\n    headChecked: [\n        { idAll: 'All', labelAll: 'Все', checkedAll: true },\n    ]\n}\n\nfunction currencyReducer (state = defaultState, action) {\n    console.log('REDUCER', state, action);\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 76)}))\n            } else if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 86)}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = state.filters.map((filter) => {\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\n                return {...filter}\n            })\n                return {...state, filters: newFilters}\n\n        case actionNames.CHECK_ALL:\n            const { toggleCheckAllName } = action;\n            let allChecked = state.filters;\n            let headChecked = state.headChecked\n            if (toggleCheckAllName === headChecked.id) {\n               allChecked = allChecked.map((filter) => ({...filter, checked: !filter.checked}))\n            }\n            return {...state, filters: allChecked, toggle: toggleCheckAllName }\n            \n\n            \n\n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;\n\n    // if (headChecked.checked === false) {\n    //                 return headChecked.map(el => ({...el, checked: true}))\n    //             } else {\n    //                 return headChecked.map(el => ({...el, checked: false}))\n    //             }\n    //           }\n    //             if (headChecked.checked === false) {\n    //                 const index = allChecked.findIndex((el) => el.id === action.id)\n    //                 const oldItem = allChecked[index]\n    //                 const newItem = {...oldItem, checked: !oldItem.checked }\n    //                 return [...allChecked.slice(0, index), newItem, ...allChecked.slice(index + 1)]\n    //             } else {\n    //                 const index = allChecked.findIndex((el) => el.id === action.id)\n    //                 const oldItem = allChecked[index]\n    //                 const allOldItem = headChecked[0]\n    //                 const allNewItem = {...allOldItem, checked: false}\n    //                 const newItem = {...oldItem, checked: !oldItem.checked }\n    //                 return [allNewItem, ...allChecked.slice(1, index), newItem, ...allChecked.slice(index + 1)]\n    //             }\n            "]},"metadata":{},"sourceType":"module"}