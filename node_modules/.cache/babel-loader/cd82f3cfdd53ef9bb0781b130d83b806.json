{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n  const {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nconst defaultState = {\n  currency: \"USD\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 0,\n    label: 'Без пересадок',\n    checked: true\n  }, {\n    id: 1,\n    label: '1 пересадка',\n    checked: true\n  }, {\n    id: 2,\n    label: '2 пересадки',\n    checked: true\n  }, {\n    id: 3,\n    label: '3 пересадки',\n    checked: true\n  }]\n}; // $ € ₽\n\nfunction currencyReducer(state = defaultState, action) {\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const icon_1 = ' ₽';\n      const icon_2 = ' €';\n      const icon_3 = ' $';\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n      tickets = tickets.map(ticket => ({ ...ticket,\n        price: ticket.price,\n        price_icon: icon_3\n      }));\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: String(Math.trunc(ticket.price / 76)) + icon_3\n        }));\n      }\n\n      if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: String(Math.trunc(ticket.price / 86)) + icon_2\n        }));\n      }\n\n      if (currencyName === \"RUB\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: String(ticket.price) + icon_1\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return { ...filter,\n          checked: !filter.checked\n        };\n        return { ...filter\n        };\n      });\n      const newTickets = [...getDefaultTickets()].filter(ticket => newFilters.find(filter => filter.id === ticket.stops).checked);\n      return { ...state,\n        filters: newFilters,\n        tickets: newTickets\n      };\n\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let allChecked = state.filters;\n\n      if (toggleCheckAllName === 'All') {\n        allChecked = allChecked.map(filter => ({ ...filter,\n          checked: !allChecked.checked\n        }));\n      }\n\n      return { ...state,\n        filters: allChecked,\n        tickets: [...defaultState.tickets]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer;","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","label","checked","currencyReducer","state","action","type","CURRENCY_CHANGE","icon_1","icon_2","icon_3","currencyName","map","ticket","price_icon","String","Math","trunc","FILTERS","filterName","newFilters","filter","newTickets","find","stops","CHECK_ALL","toggleCheckAllName","allChecked"],"mappings":"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","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n    const { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nconst defaultState = {\n    currency: \"USD\",\n    tickets: [...getDefaultTickets()],\n    filters: [\n        { id: 0, label: 'Без пересадок', checked: true },\n        { id: 1, label: '1 пересадка',  checked: true },\n        { id: 2, label: '2 пересадки',  checked: true },\n        { id: 3, label: '3 пересадки',  checked: true }\n    ],\n}\n\n// $ € ₽\n\nfunction currencyReducer (state = defaultState, action) {\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const icon_1 = ' ₽';\n            const icon_2 = ' €';\n            const icon_3 = ' $';\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            tickets = tickets.map((ticket) => ({...ticket, price: ticket.price, price_icon: icon_3}))\n\n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: String(Math.trunc(ticket.price / 76)) + icon_3}))\n            }\n            if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: String(Math.trunc(ticket.price / 86)) + icon_2}))\n            }\n            if (currencyName === \"RUB\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: String(ticket.price) + icon_1}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = state.filters.map((filter) => {\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\n                return {...filter}\n            })\n            const newTickets = [...getDefaultTickets()].filter(ticket => newFilters.find(filter => filter.id === ticket.stops).checked)\n                return {...state, filters: newFilters, tickets: newTickets }\n\n        case actionNames.CHECK_ALL:\n            const { toggleCheckAllName } = action;\n            let allChecked = state.filters;\n            if (toggleCheckAllName === 'All') {\n               allChecked = allChecked.map((filter) => ({...filter, checked: !allChecked.checked}))\n            }\n            return {...state, filters: allChecked, tickets: [...defaultState.tickets]}\n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;\n"]},"metadata":{},"sourceType":"module"}