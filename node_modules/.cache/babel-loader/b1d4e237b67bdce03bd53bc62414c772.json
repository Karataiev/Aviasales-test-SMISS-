{"ast":null,"code":"var _jsxFileName = \"/home/smissuser21/React_Project/aviasales/src/Components/\\u0421urrency.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currencyChangeAction, filterActions, getExchangeRates, getOnlyFilter } from '../Redux/actions';\nimport FilterItem from './FilterItem';\nimport CurrencyButton from './CurrencyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Currency() {\n  _s();\n\n  const filters = useSelector(state => state.root.filters);\n  const currency = useSelector(state => state.root.currency);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch(\"https://www.cbr-xml-daily.ru/latest.js\").then(res => res.json()).then(result => {\n      dispatch(getExchangeRates({ ...result.rates,\n        RUB: 1\n      }));\n    });\n  }, []);\n\n  const onClickCurrencyBtn = name => {\n    dispatch(currencyChangeAction(name));\n  };\n\n  const currencyButtons = [{\n    className: `btn_1`,\n    onClick: onClickCurrencyBtn,\n    label: 'RUB',\n    name: 'RUB',\n    id: 1\n  }, {\n    className: `btn_2`,\n    onClick: onClickCurrencyBtn,\n    label: 'USD',\n    name: 'USD',\n    id: 2\n  }, {\n    className: `btn_3`,\n    onClick: onClickCurrencyBtn,\n    label: 'EUR',\n    name: 'EUR',\n    id: 3\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currencyStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0412\\u0410\\u041B\\u042E\\u0422\\u0410\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnCur\",\n      children: currencyButtons.map(button => /*#__PURE__*/_jsxDEV(CurrencyButton, { ...button,\n        selectedCurrency: currency\n      }, button.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"transfer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041A\\u041E\\u041B\\u0418\\u0427\\u0415\\u0421\\u0422\\u0412\\u041E \\u041F\\u0415\\u0420\\u0415\\u0421\\u0410\\u0414\\u041E\\u041A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterItem, {\n        label: \"\\u0412\\u0441\\u0435\",\n        checked: filters.every(filter => filter.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), filters.map(filter => /*#__PURE__*/_jsxDEV(FilterItem, { ...filter,\n        onClick: id => dispatch(filterActions(id)),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text_2\",\n          onClick: () => {\n            dispatch(getOnlyFilter(filter.id));\n          },\n          children: \"\\u0422\\u041E\\u041B\\u042C\\u041A\\u041E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, filter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Currency, \"7xVtIZSvmuM0vxKklWBVhkggZTE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Currency;\nexport default Currency;\n\nvar _c;\n\n$RefreshReg$(_c, \"Currency\");","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/src/Components/Сurrency.js"],"names":["React","useEffect","useDispatch","useSelector","currencyChangeAction","filterActions","getExchangeRates","getOnlyFilter","FilterItem","CurrencyButton","Currency","filters","state","root","currency","dispatch","fetch","then","res","json","result","rates","RUB","onClickCurrencyBtn","name","currencyButtons","className","onClick","label","id","map","button","every","filter","checked"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currencyChangeAction, filterActions, getExchangeRates, getOnlyFilter } from '../Redux/actions';\nimport FilterItem from './FilterItem';\nimport CurrencyButton from './CurrencyButton';\n\nfunction Currency() {\n\n    const filters = useSelector(state => state.root.filters);\n    const currency = useSelector(state => state.root.currency);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        fetch(\"https://www.cbr-xml-daily.ru/latest.js\")\n        .then((res) => res.json())\n        .then(\n            (result) => {\n                dispatch(getExchangeRates({...result.rates, RUB:1}));\n            }\n        )\n    }, []);\n\n    const onClickCurrencyBtn = (name) => {\n        dispatch(currencyChangeAction(name))\n    };\n\n    const currencyButtons = [\n        {className: `btn_1`, onClick: onClickCurrencyBtn, label: 'RUB', name: 'RUB', id: 1},\n        {className: `btn_2`, onClick: onClickCurrencyBtn, label: 'USD', name: 'USD', id: 2},\n        {className: `btn_3`, onClick: onClickCurrencyBtn, label: 'EUR', name: 'EUR', id: 3}\n    ]\n\n    return (\n        <div className=\"currencyStyle\">\n            <span>ВАЛЮТА</span>\n            <div className=\"btnCur\">\n                {currencyButtons.map((button) => (\n                <CurrencyButton key={button.id} {...button} selectedCurrency={currency}/>\n                ))}\n            </div>\n            <ul className=\"transfer\">\n                <span >КОЛИЧЕСТВО ПЕРЕСАДОК</span>\n                <FilterItem label='Все' checked={filters.every(filter => filter.checked)}/>\n                {filters.map((filter) => (\n                    <FilterItem key={filter.id} {...filter} onClick={(id) => dispatch(filterActions(id))}>\n                        <button className=\"text_2\" onClick={() =>{dispatch(getOnlyFilter(filter.id))}}>ТОЛЬКО</button>\n                    </FilterItem>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Currency;\n"]},"metadata":{},"sourceType":"module"}