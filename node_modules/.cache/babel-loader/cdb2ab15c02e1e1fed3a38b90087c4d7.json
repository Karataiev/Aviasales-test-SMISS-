{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n  const {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nlet defaultState = {\n  currency: \"USD\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 1,\n    name: \"name1\",\n    label: 'Без пересадок',\n    checked: false\n  }, {\n    id: 2,\n    name: \"name2\",\n    label: '1 пересадка',\n    checked: false\n  }, {\n    id: 3,\n    name: \"name3\",\n    label: '2 пересадки',\n    checked: false\n  }, {\n    id: 4,\n    name: \"name4\",\n    label: '3 пересадки',\n    checked: false\n  }]\n};\n\nfunction currencyReducer(state = defaultState, action) {\n  console.log('REDUCER', state, action);\n\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 76)\n        }));\n      } else if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 86)\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return { ...filter,\n          checked: !filter.checked\n        };\n        return { ...filter\n        };\n      });\n      return { ...state,\n        filters: newFilters\n      };\n\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let filtersAll = state.filters;\n\n      if (toggleCheckAllName === 'All') {\n        filtersAll = filtersAll.map(filter => ({ ...filter,\n          checked: !filter.checked\n        })); // } else if (filtersAll[0].checked === false) {\n        //     return filtersAll.map(el => ({...el, checked: true}))\n        // } else {\n        //     return filtersAll.map(el => ({...el, checked: false}))\n      }\n\n      return { ...state,\n        filters: filtersAll,\n        toggle: toggleCheckAllName\n      };\n    // case actionNames.CHECKED_TICKETS:\n    //     const { ticketsName } = action;\n    //     let ticketsFilter = [...getDefaultTickets()];\n    //     if (ticketsName.id === 1) {\n    //         ticketsFilter = ticketsFilter.filter((ticket) => ({...ticket, stops: ticket.stops === 0}))\n    //     }\n    //     return {...state, ticketsFilter, ticket: ticketsName }\n    // const ticketsFilter = state.tickets.filter((ticket) => {\n    //     return newFilters.some(filter => filter === ticket.stops)\n    // });\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer; // if (action.id === 1) {\n//     if (state.filters[0].checked === false) {\n//         return state.filters.map(el => ({...el, checked: true}))\n//     } else {\n//         return state.filters.map(el => ({...el, checked: false}))\n//     }\n// }\n// if (state[0].checked === false) {\n//     const index = state.filters.findIndex((el) => el.id === action.id)\n//     const oldItem = state.filters[index]\n//     const newItem = {...oldItem, checked: !oldItem.checked }\n//     return [...state.filters.slice(0, index), newItem, ...state.filters.slice(index + 1)]\n// } else {\n//     const index = state.filters.findIndex((el) => el.id === action.id)\n//     const oldItem = state.filters[index]\n//     const allOldItem = state.filters[0]\n//     const allNewItem = {...allOldItem, checked: false}\n//     const newItem = {...oldItem, checked: !oldItem.checked }\n//     return [allNewItem, ...state.filters.slice(1, index), newItem, ...state.filters.slice(index + 1)]\n// }\n// if (toggleCheckAllName.id === 1) {\n//     if (state.filters[0].checked === false) {\n//         return state.filters.map(el => ({...el, checked: true}))\n//     } else {\n//         return state.filters.map(el => ({...el, checked: false}))\n//     }","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","name","label","checked","currencyReducer","state","action","console","log","type","CURRENCY_CHANGE","currencyName","map","ticket","Math","trunc","FILTERS","filterName","newFilters","filter","CHECK_ALL","toggleCheckAllName","filtersAll","toggle"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAcF,UAApB;AACA,SAAOE,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,CAAP;AACH,CAHD;;AAKA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,KADK;AAEfN,EAAAA,OAAO,EAAE,CAAC,GAAGD,iBAAiB,EAArB,CAFM;AAGfQ,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,KAAK,EAAE,eAA/B;AAAgDC,IAAAA,OAAO,EAAE;AAAzD,GADK,EAEL;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAuBC,IAAAA,KAAK,EAAE,aAA9B;AAA8CC,IAAAA,OAAO,EAAE;AAAvD,GAFK,EAGL;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAuBC,IAAAA,KAAK,EAAE,aAA9B;AAA8CC,IAAAA,OAAO,EAAE;AAAvD,GAHK,EAIL;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAuBC,IAAAA,KAAK,EAAE,aAA9B;AAA8CC,IAAAA,OAAO,EAAE;AAAvD,GAJK;AAHM,CAAnB;;AAWA,SAASC,eAAT,CAA0BC,KAAK,GAAGR,YAAlC,EAAgDS,MAAhD,EAAwD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB,EAA8BC,MAA9B;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKpB,WAAW,CAACqB,eAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAmBL,MAAzB;AACA,UAAId,OAAO,GAAG,CAAC,GAAGD,iBAAiB,EAArB,CAAd;;AACA,UAAIoB,YAAY,KAAK,KAArB,EAA4B;AACxBnB,QAAAA,OAAO,GAAGA,OAAO,CAACoB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYjB,UAAAA,KAAK,EAAEkB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACjB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH,OAFD,MAEO,IAAIe,YAAY,KAAK,KAArB,EAA4B;AAC/BnB,QAAAA,OAAO,GAAGA,OAAO,CAACoB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYjB,UAAAA,KAAK,EAAEkB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACjB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH;;AACD,aAAO,EAAC,GAAGS,KAAJ;AAAWP,QAAAA,QAAQ,EAAEa,YAArB;AAAmCnB,QAAAA;AAAnC,OAAP;;AAEJ,SAAKH,WAAW,CAAC2B,OAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAiBX,MAAvB;AACA,YAAMY,UAAU,GAAGb,KAAK,CAACN,OAAN,CAAca,GAAd,CAAmBO,MAAD,IAAY;AAC7C,YAAIA,MAAM,CAACnB,EAAP,KAAciB,UAAlB,EAA8B,OAAO,EAAC,GAAGE,MAAJ;AAAYhB,UAAAA,OAAO,EAAE,CAACgB,MAAM,CAAChB;AAA7B,SAAP;AAC9B,eAAO,EAAC,GAAGgB;AAAJ,SAAP;AACH,OAHkB,CAAnB;AAII,aAAO,EAAC,GAAGd,KAAJ;AAAWN,QAAAA,OAAO,EAAEmB;AAApB,OAAP;;AAER,SAAK7B,WAAW,CAAC+B,SAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAyBf,MAA/B;AACA,UAAIgB,UAAU,GAAGjB,KAAK,CAACN,OAAvB;;AACA,UAAIsB,kBAAkB,KAAK,KAA3B,EAAkC;AAC9BC,QAAAA,UAAU,GAAGA,UAAU,CAACV,GAAX,CAAgBO,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYhB,UAAAA,OAAO,EAAE,CAACgB,MAAM,CAAChB;AAA7B,SAAb,CAAf,CAAb,CAD8B,CAElC;AACA;AACA;AACA;AACC;;AAED,aAAO,EAAC,GAAGE,KAAJ;AAAWN,QAAAA,OAAO,EAAEuB,UAApB;AAAgCC,QAAAA,MAAM,EAAEF;AAAxC,OAAP;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACI,aAAO,EAAC,GAAGhB;AAAJ,OAAP;AA/CR;AAiDH;;AAED,eAAeD,eAAf,C,CAGY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n    const { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nlet defaultState = {\n    currency: \"USD\",\n    tickets: [...getDefaultTickets()],\n    filters: [\n        { id: 1, name: \"name1\", label: 'Без пересадок', checked: false },\n        { id: 2, name: \"name2\",label: '1 пересадка',  checked: false },\n        { id: 3, name: \"name3\",label: '2 пересадки',  checked: false },\n        { id: 4, name: \"name4\",label: '3 пересадки',  checked: false }\n    ],\n}\n\nfunction currencyReducer (state = defaultState, action) {\n    console.log('REDUCER', state, action);\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 76)}))\n            } else if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 86)}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = state.filters.map((filter) => {\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\n                return {...filter}\n            })\n                return {...state, filters: newFilters}\n\n        case actionNames.CHECK_ALL:\n            const { toggleCheckAllName } = action;\n            let filtersAll = state.filters;\n            if (toggleCheckAllName === 'All') {\n                filtersAll = filtersAll.map((filter) => ({...filter, checked: !filter.checked}))\n            // } else if (filtersAll[0].checked === false) {\n            //     return filtersAll.map(el => ({...el, checked: true}))\n            // } else {\n            //     return filtersAll.map(el => ({...el, checked: false}))\n            }\n            \n            return {...state, filters: filtersAll, toggle: toggleCheckAllName }\n\n\n        // case actionNames.CHECKED_TICKETS:\n        //     const { ticketsName } = action;\n        //     let ticketsFilter = [...getDefaultTickets()];\n        //     if (ticketsName.id === 1) {\n        //         ticketsFilter = ticketsFilter.filter((ticket) => ({...ticket, stops: ticket.stops === 0}))\n        //     }\n        //     return {...state, ticketsFilter, ticket: ticketsName }\n    \n\n        // const ticketsFilter = state.tickets.filter((ticket) => {\n        //     return newFilters.some(filter => filter === ticket.stops)\n        // });\n\n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;\n\n\n            // if (action.id === 1) {\n            //     if (state.filters[0].checked === false) {\n            //         return state.filters.map(el => ({...el, checked: true}))\n            //     } else {\n            //         return state.filters.map(el => ({...el, checked: false}))\n            //     }\n            // }\n            // if (state[0].checked === false) {\n            //     const index = state.filters.findIndex((el) => el.id === action.id)\n            //     const oldItem = state.filters[index]\n            //     const newItem = {...oldItem, checked: !oldItem.checked }\n            //     return [...state.filters.slice(0, index), newItem, ...state.filters.slice(index + 1)]\n            // } else {\n            //     const index = state.filters.findIndex((el) => el.id === action.id)\n            //     const oldItem = state.filters[index]\n            //     const allOldItem = state.filters[0]\n            //     const allNewItem = {...allOldItem, checked: false}\n            //     const newItem = {...oldItem, checked: !oldItem.checked }\n            //     return [allNewItem, ...state.filters.slice(1, index), newItem, ...state.filters.slice(index + 1)]\n            // }\n\n            // if (toggleCheckAllName.id === 1) {\n            //     if (state.filters[0].checked === false) {\n            //         return state.filters.map(el => ({...el, checked: true}))\n            //     } else {\n            //         return state.filters.map(el => ({...el, checked: false}))\n            //     }\n                "]},"metadata":{},"sourceType":"module"}