{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n  let {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nconst defaultState = {\n  currency: \"RUB\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 0,\n    label: 'Без пересадок',\n    checked: true\n  }, {\n    id: 1,\n    label: '1 пересадка',\n    checked: true\n  }, {\n    id: 2,\n    label: '2 пересадки',\n    checked: true\n  }, {\n    id: 3,\n    label: '3 пересадки',\n    checked: true\n  }],\n  exchangeRates: {\n    USD: 0.013612,\n    EUR: 0.011612\n  },\n  exchangeSymbol: [{\n    rub: ' ₽'\n  }, {\n    usd: ' $'\n  }, {\n    eur: ' €'\n  }]\n};\n\nfunction currencyReducer(state = defaultState, action) {\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n      let symbol = state.symbol;\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price * state.exchangeRates.USD),\n          symbol: state.exchangeSymbol.usd\n        }));\n      }\n\n      if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price * state.exchangeRates.EUR)\n        }));\n      }\n\n      if (currencyName === \"RUB\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: ticket.price,\n          symbol\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return { ...filter,\n          checked: !filter.checked\n        };\n        return { ...filter\n        };\n      });\n      const newTickets = [...getDefaultTickets()].filter(ticket => newFilters.find(filter => filter.id === ticket.stops).checked);\n      return { ...state,\n        filters: newFilters,\n        tickets: newTickets\n      };\n\n    case actionNames.EXCHANGE_RATES:\n      const {\n        exchangeRates\n      } = action;\n      return { ...state,\n        exchangeRates\n      };\n\n    case actionNames.EXCHANGE_SYMBOL:\n      const {\n        exchangeSymbol\n      } = action;\n      return { ...state,\n        exchangeSymbol\n      };\n\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let allChecked = state.filters;\n\n      if (toggleCheckAllName === 'All') {\n        allChecked = allChecked.map(filter => ({ ...filter,\n          checked: !allChecked.checked\n        }));\n      }\n\n      return { ...state,\n        filters: allChecked,\n        tickets: [...defaultState.tickets]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer;","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","label","checked","exchangeRates","USD","EUR","exchangeSymbol","rub","usd","eur","currencyReducer","state","action","type","CURRENCY_CHANGE","currencyName","symbol","map","ticket","Math","trunc","FILTERS","filterName","newFilters","filter","newTickets","find","stops","EXCHANGE_RATES","EXCHANGE_SYMBOL","CHECK_ALL","toggleCheckAllName","allChecked"],"mappings":"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","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\n\nconst getDefaultTickets = () => {\n    let { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nconst defaultState = {\n    currency: \"RUB\",\n    tickets: [...getDefaultTickets()],\n    filters: [\n        { id: 0, label: 'Без пересадок', checked: true },\n        { id: 1, label: '1 пересадка',  checked: true },\n        { id: 2, label: '2 пересадки',  checked: true },\n        { id: 3, label: '3 пересадки',  checked: true }\n    ],\n    exchangeRates: {\n        USD: 0.013612,\n        EUR: 0.011612\n    },\n    exchangeSymbol: [\n        {rub: ' ₽'},\n        {usd: ' $'},\n        {eur: ' €'},\n    ]\n}\n\nfunction currencyReducer (state = defaultState, action) {\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            let symbol = state.symbol\n        \n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price * state.exchangeRates.USD), symbol: state.exchangeSymbol.usd}))\n            }\n            if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price * state.exchangeRates.EUR)}))\n            }\n            if (currencyName === \"RUB\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: ticket.price, symbol}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = state.filters.map((filter) => {\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\n                return {...filter}\n            })\n            const newTickets = [...getDefaultTickets()].filter(ticket => newFilters.find(filter => filter.id === ticket.stops).checked)\n                return {...state, filters: newFilters, tickets: newTickets }\n       \n        case actionNames.EXCHANGE_RATES: \n            const { exchangeRates } = action;\n            return {...state, exchangeRates}\n\n        case actionNames.EXCHANGE_SYMBOL:\n            const { exchangeSymbol } = action;\n            return {...state, exchangeSymbol}\n       \n        case actionNames.CHECK_ALL:\n            const { toggleCheckAllName } = action;\n            let allChecked = state.filters;\n            if (toggleCheckAllName === 'All') {\n               allChecked = allChecked.map((filter) => ({...filter, checked: !allChecked.checked}))\n            }\n           \n            return {...state, filters: allChecked, tickets: [...defaultState.tickets]}\n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;\n"]},"metadata":{},"sourceType":"module"}