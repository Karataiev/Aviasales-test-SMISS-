{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\nimport { filterActions } from \"./actions\";\n\nconst getDefaultTickets = () => {\n  const {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\n\nlet defaultState = {\n  currency: \"USD\",\n  tickets: [...getDefaultTickets()]\n};\nlet defaultState_2 = {\n  filters: [{\n    id: 1,\n    completed: false,\n    title: 0\n  }, {\n    id: 2,\n    completed: false,\n    title: 1\n  }, {\n    id: 3,\n    completed: false,\n    title: 2\n  }, {\n    id: 4,\n    completed: false,\n    title: 3\n  }]\n};\n\nfunction currencyReducer(state = defaultState, state_2 = defaultState_2, action) {\n  console.log('REDUCER', state, state_2, action);\n\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n\n      if (currencyName === \"USD\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 76)\n        }));\n      } else if (currencyName === \"EUR\") {\n        tickets = tickets.map(ticket => ({ ...ticket,\n          price: Math.trunc(ticket.price / 86)\n        }));\n      }\n\n      return { ...state,\n        currency: currencyName,\n        tickets\n      };\n\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = [...state_2.filters, filterName]; // const ticketsFilter = state.tickets.filter((ticket) => {\n      //     return newFilters.some(filter => filter === ticket.stops)\n      // });\n\n      return { ...state_2,\n        filters: newFilters\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default currencyReducer;","map":{"version":3,"sources":["/home/smissuser21/React_Project/aviasales/avias/src/Redux/currencyReducer.js"],"names":["actionNames","ticketList","filterActions","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","defaultState_2","filters","id","completed","title","currencyReducer","state","state_2","action","console","log","type","CURRENCY_CHANGE","currencyName","map","ticket","Math","trunc","FILTERS","filterName","newFilters"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAcH,UAApB;AACA,SAAOG,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,CAAP;AACH,CAHD;;AAKA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,KADK;AAEfN,EAAAA,OAAO,EAAE,CAAC,GAAGD,iBAAiB,EAArB;AAFM,CAAnB;AAKA,IAAIQ,cAAc,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAFK,EAGL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAHK,EAIL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,KAApB;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAJK;AADQ,CAArB;;AASA,SAASC,eAAT,CAA0BC,KAAK,GAAGR,YAAlC,EAAgDS,OAAO,GAAGP,cAA1D,EAA0EQ,MAA1E,EAAkF;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,EAA8BC,OAA9B,EAAuCC,MAAvC;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKtB,WAAW,CAACuB,eAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAmBL,MAAzB;AACA,UAAIf,OAAO,GAAG,CAAC,GAAGD,iBAAiB,EAArB,CAAd;;AACA,UAAIqB,YAAY,KAAK,KAArB,EAA4B;AACxBpB,QAAAA,OAAO,GAAGA,OAAO,CAACqB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYlB,UAAAA,KAAK,EAAEmB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAClB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH,OAFD,MAEO,IAAIgB,YAAY,KAAK,KAArB,EAA4B;AAC/BpB,QAAAA,OAAO,GAAGA,OAAO,CAACqB,GAAR,CAAaC,MAAD,KAAa,EAAC,GAAGA,MAAJ;AAAYlB,UAAAA,KAAK,EAAEmB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAClB,KAAP,GAAe,EAA1B;AAAnB,SAAb,CAAZ,CAAV;AACH;;AACD,aAAO,EAAC,GAAGS,KAAJ;AAAWP,QAAAA,QAAQ,EAAEc,YAArB;AAAmCpB,QAAAA;AAAnC,OAAP;;AAEJ,SAAKJ,WAAW,CAAC6B,OAAjB;AACI,YAAM;AAAEC,QAAAA;AAAF,UAAiBX,MAAvB;AACA,YAAMY,UAAU,GAAG,CAAC,GAAGb,OAAO,CAACN,OAAZ,EAAqBkB,UAArB,CAAnB,CAFJ,CAKI;AACA;AACA;;AAEA,aAAO,EAAC,GAAGZ,OAAJ;AAAaN,QAAAA,OAAO,EAAEmB;AAAtB,OAAP;;AAEJ;AACI,aAAO,EAAC,GAAGd;AAAJ,OAAP;AAvBR;AAyBH;;AAED,eAAeD,eAAf","sourcesContent":["import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\nimport { filterActions } from \"./actions\";\n\nconst getDefaultTickets = () => {\n    const { tickets } = ticketList;\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n}\n\nlet defaultState = {\n    currency: \"USD\",\n    tickets: [...getDefaultTickets()],\n    \n}\nlet defaultState_2 = {\n    filters: [\n        { id: 1, completed: false, title: 0},\n        { id: 2, completed: false, title: 1},\n        { id: 3, completed: false, title: 2},\n        { id: 4, completed: false, title: 3}\n    ]\n}\n\nfunction currencyReducer (state = defaultState, state_2 = defaultState_2, action) {\n    console.log('REDUCER', state, state_2, action);\n    switch(action.type) {\n        case actionNames.CURRENCY_CHANGE:\n            const { currencyName } = action;\n            let tickets = [...getDefaultTickets()];\n            if (currencyName === \"USD\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 76)}))\n            } else if (currencyName === \"EUR\") {\n                tickets = tickets.map((ticket) => ({...ticket, price: Math.trunc(ticket.price / 86)}))\n            }\n            return {...state, currency: currencyName, tickets }\n        \n        case actionNames.FILTERS: \n            const { filterName } = action;\n            const newFilters = [...state_2.filters, filterName];\n\n\n            // const ticketsFilter = state.tickets.filter((ticket) => {\n            //     return newFilters.some(filter => filter === ticket.stops)\n            // });\n\n            return {...state_2, filters: newFilters}\n        \n        default:\n            return {...state};  \n    }\n}\n\nexport default currencyReducer;"]},"metadata":{},"sourceType":"module"}